1. The relationship between the "Product" and "Product_Category" entities is a one-to-many relationship, where each category in 
the "Product_Category" table can have multiple products in the "Product" table, 
but each product can only be assigned to one category. This is evident by 
the presence of a foreign key "category_id" in the "Product" table, 
which references the primary key "id" in the "Product_Category" table.

2.To ensure that each product in the "Product" table has a valid category assigned 
to it, you can implement a foreign key constraint between the "category_id" column 
in the "Product" table and the "id" column in the "Product_Category" table. 
This constraint would ensure that any attempt to insert a product with an 
invalid category_id would result in an error.

3.create the schema for the provided tables using a SQL script in MySQL:

CREATE TABLE product_category (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    desc TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP
);

CREATE TABLE product_inventory (
    id INT PRIMARY KEY AUTO_INCREMENT,
    SKU VARCHAR(255) NOT NULL,
    quantity INT NOT NULL,
    category_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    inventory_id INT,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    price DECIMAL(10, 2),
    deleted_at TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES product_category(id)
);

CREATE TABLE discount (
    id INT PRIMARY KEY AUTO_INCREMENT,
    deleted_at TIMESTAMP,
    name VARCHAR(255) NOT NULL,
    desc TEXT,
    discount_percent DECIMAL(5, 2) NOT NULL,
    active BOOLEAN NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
